{"ast":null,"code":"var _jsxFileName = \"/Users/adonaydagosto/Desktop/Chat_react/client/src/components/ChatContainercopy.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport './ChatContainercopy.css';\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChatContainercopy(_ref) {\n  _s();\n  let {\n    socket,\n    userId,\n    currentChat\n  } = _ref;\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [currentRoom, setCurrentRoom] = useState(undefined);\n  const [messageList, setMessageList] = useState([]);\n  const messageEndRef = useRef(null);\n  const {\n    user\n  } = useAuthContext();\n\n  //scroll smothly\n  useEffect(() => {\n    scrollToBottom();\n  }, [messageList]);\n  function scrollToBottom() {\n    var _messageEndRef$curren;\n    (_messageEndRef$curren = messageEndRef.current) === null || _messageEndRef$curren === void 0 ? void 0 : _messageEndRef$curren.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }\n\n  //Get current chat\n  useEffect(() => {\n    const getCurrentChat = async () => {\n      if (currentChat) {\n        await JSON.parse(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY))._id;\n      }\n    };\n    getCurrentChat();\n  }, [currentChat]);\n  function getFormattedDate() {\n    const date = new Date();\n    const year = date.getFullYear();\n    let month = (1 + date.getMonth()).toString();\n    month = month.length > 1 ? month : \"0\" + month;\n    let day = date.getDate().toString();\n    day = day.length > 1 ? day : \"0\" + day;\n    return month + \"/\" + day + \"/\" + year;\n  }\n  const todayDate = getFormattedDate();\n\n  //Joining room and rendering once\n  function orderIds(id1, id2) {\n    if (id1 > id2) {\n      return id1 + \"-\" + id2;\n    } else {\n      return id2 + \"-\" + id1;\n    }\n  }\n  console.log(currentChat);\n  function joinRoom(room) {\n    let isPublic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    if (!user) {\n      return alert(\"Please login\");\n    }\n    socket.current.emit(\"join-room\", room, currentRoom);\n    setCurrentRoom(room);\n  }\n  ;\n  useEffect(() => {\n    const roomId = orderIds(user._id, currentChat._id);\n    joinRoom(roomId, false);\n  }, [currentChat._id]);\n\n  //Get the room messages\n  useEffect(() => {\n    socket.current.on(\"room-messages\", roomMessages => {\n      setMessageList(roomMessages);\n    });\n  }, [messageList]);\n\n  // send message to (user)\n  const sendMessage = () => {\n    if (currentMessage !== \"\") {\n      const today = new Date();\n      const room = currentChat._id;\n      const author = user.username;\n      const minutes = today.getMinutes() < 10 ? \"0\" + today.getMinutes() : today.getMinutes();\n      const time = today.getHours() + \":\" + minutes;\n      const content = currentMessage;\n      socket.current.emit(\"message-room\", room, content, author, time, todayDate);\n      setCurrentMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentChat && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"currentChat\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: currentChat.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-container\",\n        children: [user && messageList.map((_ref2, idx) => {\n          let {\n            _id: date,\n            messagesByDate\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: messagesByDate.map((_ref3, msgIdx) => {\n              let {\n                content,\n                time,\n                from: sender\n              } = _ref3;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"message-content\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"message-meta\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      id: \"time\",\n                      children: time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      id: \"author\",\n                      children: sender\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 45\n                }, this)\n              }, msgIdx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 41\n              }, this);\n            })\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 33\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messageEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setCurrentMessage(e.target.value),\n          onKeyPress: event => {\n            event.key === \"Enter\" && sendMessage();\n          },\n          value: currentMessage,\n          type: \"text\",\n          className: \"txt-input\",\n          placeholder: \"Send a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          type: \"submit\",\n          className: \"btn-submit\",\n          id: \"chat-submit\",\n          disabled: !user,\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n_s(ChatContainercopy, \"Y8W1avFEHVzIPTHGtP1ruAZaV+s=\", false, function () {\n  return [useAuthContext];\n});\n_c = ChatContainercopy;\nvar _c;\n$RefreshReg$(_c, \"ChatContainercopy\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useAuthContext","ChatContainercopy","socket","userId","currentChat","currentMessage","setCurrentMessage","currentRoom","setCurrentRoom","undefined","messageList","setMessageList","messageEndRef","user","scrollToBottom","current","scrollIntoView","behavior","getCurrentChat","JSON","parse","localStorage","getItem","process","env","REACT_APP_LOCALHOST_KEY","_id","getFormattedDate","date","Date","year","getFullYear","month","getMonth","toString","length","day","getDate","todayDate","orderIds","id1","id2","console","log","joinRoom","room","isPublic","alert","emit","roomId","on","roomMessages","sendMessage","today","author","username","minutes","getMinutes","time","getHours","content","map","idx","messagesByDate","msgIdx","from","sender","e","target","value","event","key"],"sources":["/Users/adonaydagosto/Desktop/Chat_react/client/src/components/ChatContainercopy.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport './ChatContainercopy.css'\nimport { useAuthContext } from '../hooks/useAuthContext'\n\n\nexport default function ChatContainercopy({ socket, userId, currentChat }) {\n    const [currentMessage, setCurrentMessage] = useState(\"\");\n    const [currentRoom, setCurrentRoom] = useState(undefined);\n    const [messageList, setMessageList] = useState([]);\n    const messageEndRef = useRef(null);\n    const { user } = useAuthContext()\n\n    //scroll smothly\n    useEffect(() => {\n        scrollToBottom();\n    }, [messageList]);\n\n    function scrollToBottom() {\n        messageEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    }\n\n    //Get current chat\n    useEffect(() => {\n        const getCurrentChat = async () => {\n            if (currentChat) {\n                await JSON.parse(\n                    localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\n                )._id;\n            }\n        };\n        getCurrentChat();\n    }, [currentChat]);\n\n    function getFormattedDate() {\n        const date = new Date();\n        const year = date.getFullYear();\n        let month = (1 + date.getMonth()).toString();\n        month = month.length > 1 ? month : \"0\" + month;\n        let day = date.getDate().toString();\n        day = day.length > 1 ? day : \"0\" + day;\n        return month + \"/\" + day + \"/\" + year;\n    }\n    const todayDate = getFormattedDate();\n\n\n    //Joining room and rendering once\n    function orderIds(id1, id2) {\n        if (id1 > id2) {\n            return id1 + \"-\" + id2;\n        } else {\n            return id2 + \"-\" + id1;\n        }\n    }\n    console.log(currentChat)\n\n    function joinRoom(room, isPublic = true) {\n        if (!user) {\n            return alert(\"Please login\");\n        }\n        socket.current.emit(\"join-room\", room, currentRoom);\n        setCurrentRoom(room);\n    };\n\n    useEffect(() => {\n        const roomId = orderIds(user._id, currentChat._id);\n        joinRoom(roomId, false);\n\n    }, [currentChat._id])\n\n    //Get the room messages\n    useEffect(() => {\n        socket.current.on(\"room-messages\", (roomMessages) => {\n            setMessageList(roomMessages);\n        });\n    }, [messageList]);\n\n    // send message to (user)\n    const sendMessage = () => {\n        if (currentMessage !== \"\") {\n            const today = new Date();\n            const room = currentChat._id\n            const author = user.username\n            const minutes = today.getMinutes() < 10 ? \"0\" + today.getMinutes() : today.getMinutes();\n            const time = today.getHours() + \":\" + minutes;\n            const content = currentMessage\n            socket.current.emit(\"message-room\", room, content, author, time, todayDate);\n            setCurrentMessage(\"\");\n        }\n    }\n    return (\n        <>\n            {currentChat && (\n                <div className='chat-container'>\n                    {/* Curremt chat */}\n                    <div className=\"currentChat\"><p>{currentChat.username}</p></div>\n                    {/* Chat container */}\n                    <div className=\"message-container\">\n                        {user &&\n                            messageList.map(({ _id: date, messagesByDate }, idx) => (\n                                <div key={idx}>\n                                    {messagesByDate.map(({ content, time, from: sender }, msgIdx) => (\n                                        <div className=\"message\" key={msgIdx}>\n\n                                            <div>\n                                                <div className=\"message-content\">\n                                                    <p>{content}</p>\n                                                </div>\n                                                <div className=\"message-meta\">\n                                                    <p id=\"time\">{time}</p>\n                                                    <p id=\"author\">{sender}</p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ))}\n                                </div>\n                            ))}\n                        <div ref={messageEndRef} />\n                    </div>\n                    {/* Chat input */}\n                    <div className=\"chat-input\" >\n                        <input onChange={(e) => setCurrentMessage(e.target.value)} onKeyPress={(event) => {\n                            event.key === \"Enter\" && sendMessage();\n                        }}\n                            value={currentMessage} type=\"text\" className=\"txt-input\" placeholder=\"Send a message...\" />\n                        <button onClick={sendMessage} type=\"submit\" className=\"btn-submit\" id=\"chat-submit\" disabled={!user}>send</button>\n                    </div>\n                </div>\n            )}\n        </>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}