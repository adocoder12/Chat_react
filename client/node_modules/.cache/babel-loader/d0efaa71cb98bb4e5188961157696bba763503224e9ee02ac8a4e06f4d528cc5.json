{"ast":null,"code":"var _jsxFileName = \"/Users/adonaydagosto/Desktop/Chat_react/client/src/pages/Signup.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useSignup } from \"../hooks/useSignup\";\nimport { Link } from \"react-router-dom\";\nimport \"./Signup.css\";\nimport botImg from \"../assets/wall-e.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const {\n    signup,\n    error,\n    isLoading\n  } = useSignup();\n\n  // //image upload states\n  // const [image, setImage] = useState(null);\n  // const [upladingImg, setUploadingImg] = useState(false);\n  // const [imagePreview, setImagePreview] = useState(null);\n\n  // function validateImg(e) {\n  //   const file = e.target.files[0];\n  //   if (file.size >= 1048576) {\n  //     return alert(\"Max file size is 1mb\");\n  //   } else {\n  //     setImage(file);\n  //     setImagePreview(URL.createObjectURL(file));\n  //   }\n  // }\n\n  // async function uploadImage() {\n  //   const data = new FormData();\n  //   data.append(\"file\", image);\n  //   data.append(\"upload_preset\", \"z2r2ztiu\");\n  //   try {\n  //     setUploadingImg(true);\n  //     let res = await fetch(\"https://api.cloudinary.com/v1_1/dvzjsccob/image/upload\", {\n  //       method: \"post\",\n  //       body: data,\n  //     });\n  //     const urlData = await res.json();\n  //     setUploadingImg(false);\n  //     return urlData.url;\n  //   } catch (error) {\n  //     setUploadingImg(false);\n  //     console.log(error);\n  //   }\n  // }\n\n  console.log(username);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // if (!image) return alert(\"Please upload your profile picture\");\n    // const url = await uploadImage(image);\n    // console.log(url)\n\n    await signup(username, email, password);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"signup\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"REGISTER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Username:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setUsername(e.target.value),\n      value: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Email address:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      onChange: e => setEmail(e.target.value),\n      value: email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      onChange: e => setPassword(e.target.value),\n      value: password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isLoading,\n      children: \"Sign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"small\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        className: \"links\",\n        children: \"Already have an account ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"1MwgzeHufoimM/FmLY3LFXe1SSA=\", false, function () {\n  return [useSignup];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["useState","useSignup","Link","botImg","Signup","username","setUsername","email","setEmail","password","setPassword","signup","error","isLoading","console","log","handleSubmit","e","preventDefault","target","value"],"sources":["/Users/adonaydagosto/Desktop/Chat_react/client/src/pages/Signup.js"],"sourcesContent":["import { useState } from \"react\"\nimport { useSignup } from \"../hooks/useSignup\"\nimport { Link } from \"react-router-dom\";\nimport \"./Signup.css\";\nimport botImg from \"../assets/wall-e.jpg\";\n\n\n\n\nconst Signup = () => {\n  const [username, setUsername] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const { signup, error, isLoading } = useSignup()\n\n  // //image upload states\n  // const [image, setImage] = useState(null);\n  // const [upladingImg, setUploadingImg] = useState(false);\n  // const [imagePreview, setImagePreview] = useState(null);\n\n  // function validateImg(e) {\n  //   const file = e.target.files[0];\n  //   if (file.size >= 1048576) {\n  //     return alert(\"Max file size is 1mb\");\n  //   } else {\n  //     setImage(file);\n  //     setImagePreview(URL.createObjectURL(file));\n  //   }\n  // }\n\n  // async function uploadImage() {\n  //   const data = new FormData();\n  //   data.append(\"file\", image);\n  //   data.append(\"upload_preset\", \"z2r2ztiu\");\n  //   try {\n  //     setUploadingImg(true);\n  //     let res = await fetch(\"https://api.cloudinary.com/v1_1/dvzjsccob/image/upload\", {\n  //       method: \"post\",\n  //       body: data,\n  //     });\n  //     const urlData = await res.json();\n  //     setUploadingImg(false);\n  //     return urlData.url;\n  //   } catch (error) {\n  //     setUploadingImg(false);\n  //     console.log(error);\n  //   }\n  // }\n\n  console.log(username)\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    // if (!image) return alert(\"Please upload your profile picture\");\n    // const url = await uploadImage(image);\n    // console.log(url)\n\n    await signup(username, email, password)\n  }\n\n  return (\n    <form className=\"signup\" onSubmit={handleSubmit}>\n      <h3>REGISTER</h3>\n\n      {/* <div className=\"signup-profile-pic__container\">\n        <img src={imagePreview || botImg} className=\"signup-profile-pic\" />\n        <label htmlFor=\"image-upload\" className=\"image-upload-label\">\n          <i className=\"fas fa-plus-circle add-picture-icon\"></i>\n        </label>\n        <input type=\"file\" id=\"image-upload\" hidden accept=\"image/png, image/jpeg\" onChange={validateImg} />\n      </div> */}\n\n      <label>Username:</label>\n      <input\n        type=\"text\"\n        onChange={(e) => setUsername(e.target.value)}\n        value={username}\n      />\n      <label>Email address:</label>\n      <input\n        type=\"email\"\n        onChange={(e) => setEmail(e.target.value)}\n        value={email}\n      />\n      <label>Password:</label>\n      <input\n        type=\"password\"\n        onChange={(e) => setPassword(e.target.value)}\n        value={password}\n      />\n\n      <button disabled={isLoading}>Sign up</button>\n      {error && <div className=\"error\">{error}</div>}\n      <p className=\"small\">\n        <Link to=\"/login\" className=\"links\">\n          Already have an account ?\n        </Link>\n      </p>\n    </form>\n  )\n}\n\nexport default Signup"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,cAAc;AACrB,OAAOC,MAAM,MAAM,sBAAsB;AAAC;AAK1C,MAAMC,MAAM,GAAG,MAAM;EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IAAEW,MAAM;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAGZ,SAAS,EAAE;;EAEhD;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAa,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;EACrB,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,EAAE;IAClB;IACA;IACA;;IAEA,MAAMP,MAAM,CAACN,QAAQ,EAAEE,KAAK,EAAEE,QAAQ,CAAC;EACzC,CAAC;EAED,oBACE;IAAM,SAAS,EAAC,QAAQ;IAAC,QAAQ,EAAEO,YAAa;IAAA,wBAC9C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiB,eAUjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAwB,eACxB;MACE,IAAI,EAAC,MAAM;MACX,QAAQ,EAAGC,CAAC,IAAKX,WAAW,CAACW,CAAC,CAACE,MAAM,CAACC,KAAK,CAAE;MAC7C,KAAK,EAAEf;IAAS;MAAA;MAAA;MAAA;IAAA,QAChB,eACF;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA6B,eAC7B;MACE,IAAI,EAAC,OAAO;MACZ,QAAQ,EAAGY,CAAC,IAAKT,QAAQ,CAACS,CAAC,CAACE,MAAM,CAACC,KAAK,CAAE;MAC1C,KAAK,EAAEb;IAAM;MAAA;MAAA;MAAA;IAAA,QACb,eACF;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAwB,eACxB;MACE,IAAI,EAAC,UAAU;MACf,QAAQ,EAAGU,CAAC,IAAKP,WAAW,CAACO,CAAC,CAACE,MAAM,CAACC,KAAK,CAAE;MAC7C,KAAK,EAAEX;IAAS;MAAA;MAAA;MAAA;IAAA,QAChB,eAEF;MAAQ,QAAQ,EAAEI,SAAU;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiB,EAC5CD,KAAK,iBAAI;MAAK,SAAS,EAAC,OAAO;MAAA,UAAEA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAO,eAC9C;MAAG,SAAS,EAAC,OAAO;MAAA,uBAClB,QAAC,IAAI;QAAC,EAAE,EAAC,QAAQ;QAAC,SAAS,EAAC,OAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAE5B;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEX,CAAC;AAAA,GA1FKR,MAAM;EAAA,QAI2BH,SAAS;AAAA;AAAA,KAJ1CG,MAAM;AA4FZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}