{"ast":null,"code":"var _jsxFileName = \"/Users/adonaydagosto/Desktop/Chat_react/client/src/components/ChatContainercopy.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport './ChatContainercopy.css';\nimport axios from \"axios\";\nimport { sendMessageRoute, recieveMessageRoute } from \"../utils/APIRoutes\";\nimport Chatinput from \"./Chatinput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL;\nexport default function ChatContainercopy(_ref) {\n  _s();\n  let {\n    currentChat,\n    socket\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  const scrollRef = useRef();\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  useEffect(() => {\n    async function fetchMessages() {\n      const data = JSON.parse(localStorage.getItem(API_URL));\n      const response = await axios.post(recieveMessageRoute, {\n        from: data._id,\n        to: currentChat._id\n      });\n      setMessages(response.data);\n    }\n    fetchMessages();\n  }, [currentChat]);\n  useEffect(() => {\n    const getCurrentChat = () => {\n      if (currentChat) {\n        return JSON.parse(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY))._id;\n      }\n    };\n    getCurrentChat();\n  }, [currentChat]);\n\n  // const data = JSON.parse(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY))\n\n  const handleSendMsg = async msg => {\n    socket.current.emit(\"send-msg\", {\n      to: currentChat._id,\n      from: data._id,\n      msg\n    });\n    await axios.post(sendMessageRoute, {\n      from: data._id,\n      to: currentChat._id,\n      message: msg\n    });\n    setMessages(messages.concat({\n      fromSelf: true,\n      message: msg\n    }));\n  };\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on(\"msg-recieve\", msg => {\n        setArrivalMessage({\n          fromSelf: false,\n          message: msg\n        });\n      });\n    }\n  }, []);\n  useEffect(() => {\n    if (arrivalMessage) {\n      setMessages(prev => [...prev, arrivalMessage]);\n    }\n  }, [arrivalMessage]);\n  useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"messageImg\",\n            src: \"https://picsum.photos/200/300\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messageText \",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"lorem sjf lkasdjlfkajsdflkasj\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Chatinput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(ChatContainercopy, \"G0lk13xrHgkwZ5K6rUm11zKbNKM=\");\n_c = ChatContainercopy;\nvar _c;\n$RefreshReg$(_c, \"ChatContainercopy\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","sendMessageRoute","recieveMessageRoute","Chatinput","API_URL","process","env","REACT_APP_API_URL","ChatContainercopy","currentChat","socket","messages","setMessages","scrollRef","arrivalMessage","setArrivalMessage","fetchMessages","data","JSON","parse","localStorage","getItem","response","post","from","_id","to","getCurrentChat","REACT_APP_LOCALHOST_KEY","handleSendMsg","msg","current","emit","message","concat","fromSelf","on","prev","scrollIntoView","behavior"],"sources":["/Users/adonaydagosto/Desktop/Chat_react/client/src/components/ChatContainercopy.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport './ChatContainercopy.css'\nimport axios from \"axios\";\nimport { sendMessageRoute, recieveMessageRoute } from \"../utils/APIRoutes\";\n\n\n\nimport Chatinput from \"./Chatinput\";\nconst API_URL = process.env.REACT_APP_API_URL;\n\n\nexport default function ChatContainercopy({ currentChat, socket }) {\n\n    const [messages, setMessages] = useState([]);\n    const scrollRef = useRef();\n    const [arrivalMessage, setArrivalMessage] = useState(null);\n\n    useEffect(() => {\n        async function fetchMessages() {\n            const data = JSON.parse(localStorage.getItem(API_URL));\n            const response = await axios.post(recieveMessageRoute, {\n                from: data._id,\n                to: currentChat._id,\n            });\n            setMessages(response.data);\n        }\n        fetchMessages();\n    }, [currentChat]);\n\n\n    useEffect(() => {\n        const getCurrentChat = () => {\n            if (currentChat) {\n                return JSON.parse(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY))._id;\n            }\n        };\n        getCurrentChat();\n    }, [currentChat]);\n\n    // const data = JSON.parse(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY))\n\n    const handleSendMsg = async (msg) => {\n        socket.current.emit(\"send-msg\", {\n            to: currentChat._id,\n            from: data._id,\n            msg,\n        });\n        await axios.post(sendMessageRoute, {\n            from: data._id,\n            to: currentChat._id,\n            message: msg,\n        });\n\n        setMessages(messages.concat({ fromSelf: true, message: msg }));\n    };\n\n    useEffect(() => {\n        if (socket.current) {\n            socket.current.on(\"msg-recieve\", (msg) => {\n                setArrivalMessage({ fromSelf: false, message: msg });\n            });\n        }\n    }, []);\n\n    useEffect(() => {\n        if (arrivalMessage) {\n            setMessages((prev) => [...prev, arrivalMessage]);\n        }\n    }, [arrivalMessage]);\n\n    useEffect(() => {\n        if (scrollRef.current) {\n            scrollRef.current.scrollIntoView({ behavior: \"smooth\" });\n        }\n    }, [messages]);\n\n\n    return (\n        <>\n            <div className='chat-container'>\n                <div className='chat-messages'>\n\n                    <div className='message'>\n                        <img\n                            className=\"messageImg\"\n                            src='https://picsum.photos/200/300'\n                            alt=\"\"\n                        />\n                        <div className=\"messageText \">\n                            <p>lorem sjf lkasdjlfkajsdflkasj</p>\n                        </div>\n\n                    </div>\n\n                </div>\n                <Chatinput />\n            </div>\n        </>\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,yBAAyB;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,EAAEC,mBAAmB,QAAQ,oBAAoB;AAI1E,OAAOC,SAAS,MAAM,aAAa;AAAC;AAAA;AACpC,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAG7C,eAAe,SAASC,iBAAiB,OAA0B;EAAA;EAAA,IAAzB;IAAEC,WAAW;IAAEC;EAAO,CAAC;EAE7D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMgB,SAAS,GAAGd,MAAM,EAAE;EAC1B,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACZ,eAAekB,aAAa,GAAG;MAC3B,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACjB,OAAO,CAAC,CAAC;MACtD,MAAMkB,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,IAAI,CAACrB,mBAAmB,EAAE;QACnDsB,IAAI,EAAEP,IAAI,CAACQ,GAAG;QACdC,EAAE,EAAEjB,WAAW,CAACgB;MACpB,CAAC,CAAC;MACFb,WAAW,CAACU,QAAQ,CAACL,IAAI,CAAC;IAC9B;IACAD,aAAa,EAAE;EACnB,CAAC,EAAE,CAACP,WAAW,CAAC,CAAC;EAGjBX,SAAS,CAAC,MAAM;IACZ,MAAM6B,cAAc,GAAG,MAAM;MACzB,IAAIlB,WAAW,EAAE;QACb,OAAOS,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAChB,OAAO,CAACC,GAAG,CAACsB,uBAAuB,CAAC,CAAC,CAACH,GAAG;MACpF;IACJ,CAAC;IACDE,cAAc,EAAE;EACpB,CAAC,EAAE,CAAClB,WAAW,CAAC,CAAC;;EAEjB;;EAEA,MAAMoB,aAAa,GAAG,MAAOC,GAAG,IAAK;IACjCpB,MAAM,CAACqB,OAAO,CAACC,IAAI,CAAC,UAAU,EAAE;MAC5BN,EAAE,EAAEjB,WAAW,CAACgB,GAAG;MACnBD,IAAI,EAAEP,IAAI,CAACQ,GAAG;MACdK;IACJ,CAAC,CAAC;IACF,MAAM9B,KAAK,CAACuB,IAAI,CAACtB,gBAAgB,EAAE;MAC/BuB,IAAI,EAAEP,IAAI,CAACQ,GAAG;MACdC,EAAE,EAAEjB,WAAW,CAACgB,GAAG;MACnBQ,OAAO,EAAEH;IACb,CAAC,CAAC;IAEFlB,WAAW,CAACD,QAAQ,CAACuB,MAAM,CAAC;MAAEC,QAAQ,EAAE,IAAI;MAAEF,OAAO,EAAEH;IAAI,CAAC,CAAC,CAAC;EAClE,CAAC;EAEDhC,SAAS,CAAC,MAAM;IACZ,IAAIY,MAAM,CAACqB,OAAO,EAAE;MAChBrB,MAAM,CAACqB,OAAO,CAACK,EAAE,CAAC,aAAa,EAAGN,GAAG,IAAK;QACtCf,iBAAiB,CAAC;UAAEoB,QAAQ,EAAE,KAAK;UAAEF,OAAO,EAAEH;QAAI,CAAC,CAAC;MACxD,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,EAAE,CAAC;EAENhC,SAAS,CAAC,MAAM;IACZ,IAAIgB,cAAc,EAAE;MAChBF,WAAW,CAAEyB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEvB,cAAc,CAAC,CAAC;IACpD;EACJ,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAEpBhB,SAAS,CAAC,MAAM;IACZ,IAAIe,SAAS,CAACkB,OAAO,EAAE;MACnBlB,SAAS,CAACkB,OAAO,CAACO,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IAC5D;EACJ,CAAC,EAAE,CAAC5B,QAAQ,CAAC,CAAC;EAGd,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC3B;QAAK,SAAS,EAAC,eAAe;QAAA,uBAE1B;UAAK,SAAS,EAAC,SAAS;UAAA,wBACpB;YACI,SAAS,EAAC,YAAY;YACtB,GAAG,EAAC,+BAA+B;YACnC,GAAG,EAAC;UAAE;YAAA;YAAA;YAAA;UAAA,QACR,eACF;YAAK,SAAS,EAAC,cAAc;YAAA,uBACzB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAoC;YAAA;YAAA;YAAA;UAAA,QAClC;QAAA;UAAA;UAAA;UAAA;QAAA;MAEJ;QAAA;QAAA;QAAA;MAAA,QAEJ,eACN,QAAC,SAAS;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACX,iBACP;AAEX;AAAC,GAxFuBH,iBAAiB;AAAA,KAAjBA,iBAAiB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}