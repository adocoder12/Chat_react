{"ast":null,"code":"var _jsxFileName = \"/Users/adonaydagosto/Desktop/Chat_react/client/src/pages/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { useNavigate } from \"react-router-dom\";\n// CSS\nimport './Chat.css';\nimport Welcome from \"../components/Welcome\";\n\n//Component\nimport ChatContainercopy from '../components/ChatContainer';\nimport Contacts from '../components/Contacts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Chat() {\n  _s();\n  const socket = useRef();\n  const [contacts, setContacts] = useState([]);\n  const {\n    user\n  } = useAuthContext();\n  const [currentChat, setCurrentChat] = useState(undefined);\n  const [currentUser, setCurrentUser] = useState({});\n  const navigate = useNavigate();\n  useEffect(() => {\n    const settingCurrentUser = () => {\n      if (!localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)) {\n        navigate(\"/login\");\n      } else {\n        setCurrentUser(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY));\n      }\n    };\n    settingCurrentUser();\n  });\n  useEffect(() => {\n    if (currentUser) {\n      socket.current = io(\"http://localhost:3001\");\n      socket.current.emit(\"new-user\", currentUser._id);\n    }\n  }, [currentUser]);\n  useEffect(() => {\n    const fetchAllUser = async () => {\n      if (user) {\n        fetch(`http://localhost:3001/api/user/allusers/${user._id}`).then(res => res.json()).then(data => {\n          setContacts(data);\n        });\n      }\n    };\n    fetchAllUser();\n  }, [user]);\n  const handleChatChange = chat => {\n    setCurrentChat(chat);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contain\",\n      children: [/*#__PURE__*/_jsxDEV(Contacts, {\n        contacts: contacts,\n        changeChat: handleChatChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), currentChat === undefined ? /*#__PURE__*/_jsxDEV(Welcome, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(ChatContainercopy, {\n        socket: socket,\n        userId: user._id,\n        currentChat: currentChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Chat, \"J3JFBR7KsAh2pwFO6czsjNyk/Kg=\", false, function () {\n  return [useAuthContext, useNavigate];\n});\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","useAuthContext","useNavigate","Welcome","ChatContainercopy","Contacts","Chat","socket","contacts","setContacts","user","currentChat","setCurrentChat","undefined","currentUser","setCurrentUser","navigate","settingCurrentUser","localStorage","getItem","process","env","REACT_APP_LOCALHOST_KEY","current","emit","_id","fetchAllUser","fetch","then","res","json","data","handleChatChange","chat"],"sources":["/Users/adonaydagosto/Desktop/Chat_react/client/src/pages/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { useAuthContext } from '../hooks/useAuthContext'\nimport { useNavigate } from \"react-router-dom\";\n// CSS\nimport './Chat.css'\nimport Welcome from \"../components/Welcome\";\n\n//Component\nimport ChatContainercopy from '../components/ChatContainer'\nimport Contacts from '../components/Contacts';\n\nexport default function Chat() {\n    const socket = useRef();\n    const [contacts, setContacts] = useState([]);\n    const { user } = useAuthContext()\n    const [currentChat, setCurrentChat] = useState(undefined);\n    const [currentUser, setCurrentUser] = useState({});\n    const navigate = useNavigate();\n    useEffect(() => {\n        const settingCurrentUser = () => {\n            if (!localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)) {\n                navigate(\"/login\");\n            } else {\n                setCurrentUser(\n                    localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\n                );\n            }\n        }\n        settingCurrentUser()\n    },);\n\n    useEffect(() => {\n        if (currentUser) {\n            socket.current = io(\"http://localhost:3001\");\n            socket.current.emit(\"new-user\", currentUser._id);\n        }\n    }, [currentUser]);\n\n    useEffect(() => {\n        const fetchAllUser = async () => {\n            if (user) {\n                fetch(`http://localhost:3001/api/user/allusers/${user._id}`)\n                    .then((res) => res.json())\n                    .then((data) => {\n                        setContacts(data)\n\n                    });\n            }\n        }\n        fetchAllUser()\n    }, [user]);\n\n    const handleChatChange = (chat) => {\n        setCurrentChat(chat);\n    };\n\n    return (\n        <>\n            <div className='contain'>\n                <Contacts contacts={contacts} changeChat={handleChatChange} />\n                {currentChat === undefined ?\n                    (<Welcome />) :\n                    (<ChatContainercopy socket={socket} userId={user._id} currentChat={currentChat} />)\n\n                }\n            </div>\n        </>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,EAAE,QAAQ,kBAAkB;AACrC,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C;AACA,OAAO,YAAY;AACnB,OAAOC,OAAO,MAAM,uBAAuB;;AAE3C;AACA,OAAOC,iBAAiB,MAAM,6BAA6B;AAC3D,OAAOC,QAAQ,MAAM,wBAAwB;AAAC;AAAA;AAE9C,eAAe,SAASC,IAAI,GAAG;EAAA;EAC3B,MAAMC,MAAM,GAAGR,MAAM,EAAE;EACvB,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IAAEa;EAAK,CAAC,GAAGT,cAAc,EAAE;EACjC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAACgB,SAAS,CAAC;EACzD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAMmB,QAAQ,GAAGd,WAAW,EAAE;EAC9BJ,SAAS,CAAC,MAAM;IACZ,MAAMmB,kBAAkB,GAAG,MAAM;MAC7B,IAAI,CAACC,YAAY,CAACC,OAAO,CAACC,OAAO,CAACC,GAAG,CAACC,uBAAuB,CAAC,EAAE;QAC5DN,QAAQ,CAAC,QAAQ,CAAC;MACtB,CAAC,MAAM;QACHD,cAAc,CACVG,YAAY,CAACC,OAAO,CAACC,OAAO,CAACC,GAAG,CAACC,uBAAuB,CAAC,CAC5D;MACL;IACJ,CAAC;IACDL,kBAAkB,EAAE;EACxB,CAAC,CAAE;EAEHnB,SAAS,CAAC,MAAM;IACZ,IAAIgB,WAAW,EAAE;MACbP,MAAM,CAACgB,OAAO,GAAGvB,EAAE,CAAC,uBAAuB,CAAC;MAC5CO,MAAM,CAACgB,OAAO,CAACC,IAAI,CAAC,UAAU,EAAEV,WAAW,CAACW,GAAG,CAAC;IACpD;EACJ,CAAC,EAAE,CAACX,WAAW,CAAC,CAAC;EAEjBhB,SAAS,CAAC,MAAM;IACZ,MAAM4B,YAAY,GAAG,YAAY;MAC7B,IAAIhB,IAAI,EAAE;QACNiB,KAAK,CAAE,2CAA0CjB,IAAI,CAACe,GAAI,EAAC,CAAC,CACvDG,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;UACZtB,WAAW,CAACsB,IAAI,CAAC;QAErB,CAAC,CAAC;MACV;IACJ,CAAC;IACDL,YAAY,EAAE;EAClB,CAAC,EAAE,CAAChB,IAAI,CAAC,CAAC;EAEV,MAAMsB,gBAAgB,GAAIC,IAAI,IAAK;IAC/BrB,cAAc,CAACqB,IAAI,CAAC;EACxB,CAAC;EAED,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,SAAS;MAAA,wBACpB,QAAC,QAAQ;QAAC,QAAQ,EAAEzB,QAAS;QAAC,UAAU,EAAEwB;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAG,EAC7DrB,WAAW,KAAKE,SAAS,gBACrB,QAAC,OAAO;QAAA;QAAA;QAAA;MAAA,QAAG,gBACX,QAAC,iBAAiB;QAAC,MAAM,EAAEN,MAAO;QAAC,MAAM,EAAEG,IAAI,CAACe,GAAI;QAAC,WAAW,EAAEd;MAAY;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA;EAGrF,iBACP;AAEX;AAAC,GAzDuBL,IAAI;EAAA,QAGPL,cAAc,EAGdC,WAAW;AAAA;AAAA,KANRI,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}