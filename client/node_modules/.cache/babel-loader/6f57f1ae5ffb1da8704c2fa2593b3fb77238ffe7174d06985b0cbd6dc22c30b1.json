{"ast":null,"code":"var _jsxFileName = \"/Users/adonaydagosto/Desktop/Chat_react/client/src/components/Contacts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n// import React from \"react\";\nimport './Contacts.css';\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Contacts(_ref) {\n  _s();\n  let {\n    socket,\n    contacts,\n    changeChat\n  } = _ref;\n  // const [currentRoom, setCurrentRoom] = useState([]);\n  // const [rooms, setRooms] = useState([]);\n  const [privateMemberMsg, setPrivateMemberMsg] = useState({});\n  const [currentUserName, setCurrentUserName] = useState(undefined);\n  const [currentSelected, setCurrentSelected] = useState(undefined);\n  const [currentRoom, setCurrentRoom] = useState(undefined);\n  const {\n    user\n  } = useAuthContext();\n  useEffect(() => {\n    if (user) {\n      setCurrentUserName(user.username);\n    }\n  }, [currentUserName]);\n  console.log(currentUserName);\n  function joinRoom(room) {\n    let isPublic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (!user) {\n      return alert(\"Please login\");\n    }\n    socket.current.emit(\"join-room\", room, currentRoom);\n    setCurrentRoom(room);\n  }\n  ;\n  function orderIds(id1, id2) {\n    if (id1 > id2) {\n      return id1 + \"-\" + id2;\n    } else {\n      return id2 + \"-\" + id1;\n    }\n  }\n  const changeCurrentChat = (index, contact) => {\n    setCurrentSelected(index);\n    changeChat(contact);\n    // const roomId = orderIds(user._id, contact._id);\n    // joinRoom(roomId, false)\n    // changeChat(currentRoom);\n    // setPrivateMemberMsg(contact);\n    joinRoom(contact._id);\n  };\n\n  // function handlePrivateMemberMsg(member) {\n  //     setPrivateMemberMsg(member);\n  //     const roomId = orderIds(user._id, member._id);\n  //     onJoinRoom(roomId, false);\n  // }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users-card\",\n      children: contacts.filter(contact => contact.status == \"online\").map((contact, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => changeCurrentChat(index, contact),\n          className: `user-details ${index === currentSelected ? `users-card user-details selected` : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"username\",\n            children: contact.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this)\n        }, contact._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n_s(Contacts, \"xfwS3ryPOawGAII/RH8gvcU8xfI=\", false, function () {\n  return [useAuthContext];\n});\n_c = Contacts;\nvar _c;\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"names":["React","useState","useEffect","useAuthContext","io","Contacts","socket","contacts","changeChat","privateMemberMsg","setPrivateMemberMsg","currentUserName","setCurrentUserName","undefined","currentSelected","setCurrentSelected","currentRoom","setCurrentRoom","user","username","console","log","joinRoom","room","isPublic","alert","current","emit","orderIds","id1","id2","changeCurrentChat","index","contact","_id","filter","status","map"],"sources":["/Users/adonaydagosto/Desktop/Chat_react/client/src/components/Contacts.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import React from \"react\";\nimport './Contacts.css'\nimport { useAuthContext } from '../hooks/useAuthContext'\nimport { io } from \"socket.io-client\";\n\n\n\n\n\nexport default function Contacts({ socket, contacts, changeChat }) {\n    // const [currentRoom, setCurrentRoom] = useState([]);\n    // const [rooms, setRooms] = useState([]);\n    const [privateMemberMsg, setPrivateMemberMsg] = useState({});\n    const [currentUserName, setCurrentUserName] = useState(undefined);\n    const [currentSelected, setCurrentSelected] = useState(undefined);\n    const [currentRoom, setCurrentRoom] = useState(undefined);\n    const { user } = useAuthContext()\n\n    useEffect(() => {\n        if (user) {\n            setCurrentUserName(user.username);\n        }\n    }, [currentUserName]);\n    console.log(currentUserName)\n\n\n    function joinRoom(room, isPublic = false) {\n        if (!user) {\n            return alert(\"Please login\");\n        }\n        socket.current.emit(\"join-room\", room, currentRoom);\n        setCurrentRoom(room);\n\n    };\n\n    function orderIds(id1, id2) {\n        if (id1 > id2) {\n            return id1 + \"-\" + id2;\n        } else {\n            return id2 + \"-\" + id1;\n        }\n    }\n\n    const changeCurrentChat = (index, contact) => {\n        setCurrentSelected(index);\n        changeChat(contact)\n        // const roomId = orderIds(user._id, contact._id);\n        // joinRoom(roomId, false)\n        // changeChat(currentRoom);\n        // setPrivateMemberMsg(contact);\n        joinRoom(contact._id);\n\n    }\n\n\n\n\n\n    // function handlePrivateMemberMsg(member) {\n    //     setPrivateMemberMsg(member);\n    //     const roomId = orderIds(user._id, member._id);\n    //     onJoinRoom(roomId, false);\n    // }\n    return (\n        <>\n            {(user &&\n                < div className='users-card' >\n                    {contacts.filter((contact) => contact.status == \"online\").map((contact, index) => {\n                        return (\n                            <div key={contact._id} onClick={() => changeCurrentChat(index, contact)} className={`user-details ${index === currentSelected ? `users-card user-details selected` : ''\n                                }`}  >\n                                <h3 className=\"username\">{contact.username}</h3>\n                            </div>\n                        );\n                    }\n                    )}\n                </div >\n            )\n            }\n        </>\n    )\n\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD;AACA,OAAO,gBAAgB;AACvB,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,EAAE,QAAQ,kBAAkB;AAAC;AAAA;AAMtC,eAAe,SAASC,QAAQ,OAAmC;EAAA;EAAA,IAAlC;IAAEC,MAAM;IAAEC,QAAQ;IAAEC;EAAW,CAAC;EAC7D;EACA;EACA,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAACY,SAAS,CAAC;EACjE,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAACY,SAAS,CAAC;EACjE,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAACY,SAAS,CAAC;EACzD,MAAM;IAAEK;EAAK,CAAC,GAAGf,cAAc,EAAE;EAEjCD,SAAS,CAAC,MAAM;IACZ,IAAIgB,IAAI,EAAE;MACNN,kBAAkB,CAACM,IAAI,CAACC,QAAQ,CAAC;IACrC;EACJ,CAAC,EAAE,CAACR,eAAe,CAAC,CAAC;EACrBS,OAAO,CAACC,GAAG,CAACV,eAAe,CAAC;EAG5B,SAASW,QAAQ,CAACC,IAAI,EAAoB;IAAA,IAAlBC,QAAQ,uEAAG,KAAK;IACpC,IAAI,CAACN,IAAI,EAAE;MACP,OAAOO,KAAK,CAAC,cAAc,CAAC;IAChC;IACAnB,MAAM,CAACoB,OAAO,CAACC,IAAI,CAAC,WAAW,EAAEJ,IAAI,EAAEP,WAAW,CAAC;IACnDC,cAAc,CAACM,IAAI,CAAC;EAExB;EAAC;EAED,SAASK,QAAQ,CAACC,GAAG,EAAEC,GAAG,EAAE;IACxB,IAAID,GAAG,GAAGC,GAAG,EAAE;MACX,OAAOD,GAAG,GAAG,GAAG,GAAGC,GAAG;IAC1B,CAAC,MAAM;MACH,OAAOA,GAAG,GAAG,GAAG,GAAGD,GAAG;IAC1B;EACJ;EAEA,MAAME,iBAAiB,GAAG,CAACC,KAAK,EAAEC,OAAO,KAAK;IAC1ClB,kBAAkB,CAACiB,KAAK,CAAC;IACzBxB,UAAU,CAACyB,OAAO,CAAC;IACnB;IACA;IACA;IACA;IACAX,QAAQ,CAACW,OAAO,CAACC,GAAG,CAAC;EAEzB,CAAC;;EAMD;EACA;EACA;EACA;EACA;EACA,oBACI;IAAA,UACMhB,IAAI,iBACF;MAAM,SAAS,EAAC,YAAY;MAAA,UACvBX,QAAQ,CAAC4B,MAAM,CAAEF,OAAO,IAAKA,OAAO,CAACG,MAAM,IAAI,QAAQ,CAAC,CAACC,GAAG,CAAC,CAACJ,OAAO,EAAED,KAAK,KAAK;QAC9E,oBACI;UAAuB,OAAO,EAAE,MAAMD,iBAAiB,CAACC,KAAK,EAAEC,OAAO,CAAE;UAAC,SAAS,EAAG,gBAAeD,KAAK,KAAKlB,eAAe,GAAI,kCAAiC,GAAG,EAChK,EAAE;UAAA,uBACH;YAAI,SAAS,EAAC,UAAU;YAAA,UAAEmB,OAAO,CAACd;UAAQ;YAAA;YAAA;YAAA;UAAA;QAAM,GAF1Cc,OAAO,CAACC,GAAG;UAAA;UAAA;UAAA;QAAA,QAGf;MAEd,CAAC;IACA;MAAA;MAAA;MAAA;IAAA;EACE,iBAGZ;AAGX;AAAC,GAzEuB7B,QAAQ;EAAA,QAOXF,cAAc;AAAA;AAAA,KAPXE,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}