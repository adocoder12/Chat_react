{"ast":null,"code":"var _jsxFileName = \"/Users/adonaydagosto/Desktop/Chat_react/client/src/components/ChatContainercopy.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\n// import ScrollToBottom from \"react-scroll-to-bottom\";\nimport './ChatContainercopy.css';\nimport { io } from \"socket.io-client\";\nimport { useAuthContext } from '../hooks/useAuthContext';\n\n// import Chatinput from \"./Chatinput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChatContainercopy(_ref) {\n  _s();\n  let {\n    userId,\n    username,\n    currentRoom,\n    currentChat\n  } = _ref;\n  const socket = io.connect(\"http://localhost:3001\");\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  const messageEndRef = useRef(null);\n  const {\n    user\n  } = useAuthContext();\n  useEffect(() => {\n    scrollToBottom();\n  }, [messageList]);\n  function scrollToBottom() {\n    var _messageEndRef$curren;\n    (_messageEndRef$curren = messageEndRef.current) === null || _messageEndRef$curren === void 0 ? void 0 : _messageEndRef$curren.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }\n  function getFormattedDate() {\n    const date = new Date();\n    const year = date.getFullYear();\n    let month = (1 + date.getMonth()).toString();\n    month = month.length > 1 ? month : \"0\" + month;\n    let day = date.getDate().toString();\n    day = day.length > 1 ? day : \"0\" + day;\n    return month + \"/\" + day + \"/\" + year;\n  }\n  useEffect(() => {\n    const getCurrentChat = async () => {\n      if (currentChat) {\n        await JSON.parse(localStorage.getItem(\"user\"))._id;\n        // userId\n      }\n    };\n\n    getCurrentChat();\n    console.log(\"currentchat 1 : \" + currentChat);\n  }, [currentChat]);\n  console.log(\"currentchat: 2 \" + currentChat._id);\n  const todayDate = getFormattedDate();\n  socket.off(\"room-messages\").on(\"room-messages\", roomMessages => {\n    setMessageList(list => [...list, roomMessages]);\n    // setMessageList(roomMessages);\n    console.log(\"roomMsgs:\" + roomMessages);\n  });\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      const today = new Date();\n      const room = currentChat._id;\n      const author = userId;\n      const minutes = today.getMinutes() < 10 ? \"0\" + today.getMinutes() : today.getMinutes();\n      const time = today.getHours() + \":\" + minutes;\n      const content = currentMessage;\n      await socket.emit(\"message-room\", room, content, author, time, todayDate);\n      // setMessageList((list) => [...list, messageData]);\n      setCurrentMessage(\"\");\n    }\n  };\n  useEffect(() => {\n    socket.off(\"room-messages\").on(\"room-messages\", roomMessages => {\n      // setMessageList((list) => [...list, roomMessages]);\n      setMessageList(roomMessages);\n      console.log(\"rooom Msgs client: \" + roomMessages);\n    });\n  }, [messageList]);\n  console.log(\"message lisst: \" + messageList);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-container\",\n        children: [user && messageList.map((_ref2, idx) => {\n          let {\n            _id: date,\n            messagesByDate\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"alert alert-info text-center message-date-indicator\",\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this), messagesByDate.map((_ref3, msgIdx) => {\n              let {\n                content,\n                time,\n                from: sender\n              } = _ref3;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"message-content\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"message-meta\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      id: \"time\",\n                      children: time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      id: \"author\",\n                      children: sender\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 41\n                }, this)\n              }, msgIdx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 37\n              }, this);\n            })]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messageEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setCurrentMessage(e.target.value),\n          onKeyPress: event => {\n            event.key === \"Enter\" && sendMessage();\n          },\n          value: currentMessage,\n          type: \"text\",\n          className: \"txt-input\",\n          placeholder: \"Send a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          type: \"submit\",\n          className: \"btn-submit\",\n          id: \"chat-submit\",\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(ChatContainercopy, \"+re9Nj4haDKH69yETCLzaOc6Pb8=\", false, function () {\n  return [useAuthContext];\n});\n_c = ChatContainercopy;\nvar _c;\n$RefreshReg$(_c, \"ChatContainercopy\");","map":{"version":3,"names":["React","useEffect","useState","useRef","io","useAuthContext","ChatContainercopy","userId","username","currentRoom","currentChat","socket","connect","currentMessage","setCurrentMessage","messageList","setMessageList","messageEndRef","user","scrollToBottom","current","scrollIntoView","behavior","getFormattedDate","date","Date","year","getFullYear","month","getMonth","toString","length","day","getDate","getCurrentChat","JSON","parse","localStorage","getItem","_id","console","log","todayDate","off","on","roomMessages","list","sendMessage","today","room","author","minutes","getMinutes","time","getHours","content","emit","map","idx","messagesByDate","msgIdx","from","sender","e","target","value","event","key"],"sources":["/Users/adonaydagosto/Desktop/Chat_react/client/src/components/ChatContainercopy.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n// import ScrollToBottom from \"react-scroll-to-bottom\";\nimport './ChatContainercopy.css'\nimport { io } from \"socket.io-client\";\nimport { useAuthContext } from '../hooks/useAuthContext'\n\n\n// import Chatinput from \"./Chatinput\";\nexport default function ChatContainercopy({ userId, username, currentRoom, currentChat }) {\n    const socket = io.connect(\"http://localhost:3001\");\n    const [currentMessage, setCurrentMessage] = useState(\"\");\n    const [messageList, setMessageList] = useState([]);\n    const messageEndRef = useRef(null);\n    const { user } = useAuthContext()\n\n\n\n    useEffect(() => {\n        scrollToBottom();\n    }, [messageList]);\n\n    function scrollToBottom() {\n        messageEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    }\n    function getFormattedDate() {\n        const date = new Date();\n        const year = date.getFullYear();\n        let month = (1 + date.getMonth()).toString();\n\n        month = month.length > 1 ? month : \"0\" + month;\n        let day = date.getDate().toString();\n\n        day = day.length > 1 ? day : \"0\" + day;\n\n        return month + \"/\" + day + \"/\" + year;\n    }\n    useEffect(() => {\n        const getCurrentChat = async () => {\n            if (currentChat) {\n                await JSON.parse(\n                    localStorage.getItem(\"user\")\n                )._id;\n                // userId\n            }\n        };\n        getCurrentChat();\n        console.log(\"currentchat 1 : \" + currentChat)\n\n    }, [currentChat]);\n\n    console.log(\"currentchat: 2 \" + currentChat._id)\n    const todayDate = getFormattedDate();\n\n    socket.off(\"room-messages\").on(\"room-messages\", (roomMessages) => {\n        setMessageList((list) => [...list, roomMessages]);\n        // setMessageList(roomMessages);\n        console.log(\"roomMsgs:\" + roomMessages)\n\n    });\n    const sendMessage = async () => {\n        if (currentMessage !== \"\") {\n            const today = new Date();\n            const room = currentChat._id\n            const author = userId\n            const minutes = today.getMinutes() < 10 ? \"0\" + today.getMinutes() : today.getMinutes();\n            const time = today.getHours() + \":\" + minutes;\n            const content = currentMessage\n            await socket.emit(\"message-room\", room, content, author, time, todayDate);\n            // setMessageList((list) => [...list, messageData]);\n            setCurrentMessage(\"\");\n        }\n\n    };\n    useEffect(() => {\n        socket.off(\"room-messages\").on(\"room-messages\", (roomMessages) => {\n            // setMessageList((list) => [...list, roomMessages]);\n            setMessageList(roomMessages);\n            console.log(\"rooom Msgs client: \" + roomMessages)\n\n        });\n    }, [messageList]);\n\n    console.log(\"message lisst: \" + messageList)\n\n    return (\n        <>\n            <div className='chat-container'>\n                <div className=\"message-container\">\n                    {/* {messageList.map((messageContent) => {\n                        <div\n                            className=\"message\"\n                            id={username === messageContent.from ? \"you\" : \"other\"} key={messageContent.time}\n                        >\n                            <div>\n                                <div className=\"message-content\">\n                                    <p>{messageContent.content}</p>\n                                </div>\n                                <div className=\"message-meta\">\n                                    <p id=\"time\">{messageContent.time}</p>\n                                    <p id=\"author\">{messageContent.sender}</p>\n                                </div>\n                            </div>\n                        </div>\n                    })} */}\n                    {/* 2 */}\n                    {user &&\n                        messageList.map(({ _id: date, messagesByDate }, idx) => (\n                            <div key={idx}>\n                                <p className=\"alert alert-info text-center message-date-indicator\">{date}</p>\n                                {messagesByDate.map(({ content, time, from: sender }, msgIdx) => (\n                                    <div className=\"message\" key={msgIdx}>\n                                        <div>\n                                            <div className=\"message-content\">\n                                                <p>{content}</p>\n                                            </div>\n                                            <div className=\"message-meta\">\n                                                <p id=\"time\">{time}</p>\n                                                <p id=\"author\">{sender}</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        ))}\n                    <div ref={messageEndRef} />\n                </div>\n                <div className=\"chat-input\" >\n                    <input onChange={(e) => setCurrentMessage(e.target.value)} onKeyPress={(event) => {\n                        event.key === \"Enter\" && sendMessage();\n                    }}\n                        value={currentMessage} type=\"text\" className=\"txt-input\" placeholder=\"Send a message...\" />\n                    <button onClick={sendMessage} type=\"submit\" className=\"btn-submit\" id=\"chat-submit\">send</button>\n                </div>\n                {/* <Chatinput /> */}\n            </div>\n        </>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}