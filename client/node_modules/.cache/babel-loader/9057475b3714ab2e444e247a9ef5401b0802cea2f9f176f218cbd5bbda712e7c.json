{"ast":null,"code":"var _jsxFileName = \"/Users/adonaydagosto/Desktop/Chat_react/client/src/components/ChatContainercopy.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\n// import ScrollToBottom from \"react-scroll-to-bottom\";\nimport './ChatContainercopy.css';\nimport { io } from \"socket.io-client\";\nimport { useAuthContext } from '../hooks/useAuthContext';\n\n// import Chatinput from \"./Chatinput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChatContainercopy(_ref) {\n  _s();\n  let {\n    userId,\n    username,\n    currentRoom,\n    currentChat\n  } = _ref;\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  const messageEndRef = useRef(null);\n  const socket = io.connect(\"http://localhost:3001\");\n  useEffect(() => {\n    scrollToBottom();\n  }, [messageList]);\n  function scrollToBottom() {\n    var _messageEndRef$curren;\n    (_messageEndRef$curren = messageEndRef.current) === null || _messageEndRef$curren === void 0 ? void 0 : _messageEndRef$curren.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }\n  function getFormattedDate() {\n    const date = new Date();\n    const year = date.getFullYear();\n    let month = (1 + date.getMonth()).toString();\n    month = month.length > 1 ? month : \"0\" + month;\n    let day = date.getDate().toString();\n    day = day.length > 1 ? day : \"0\" + day;\n    return month + \"/\" + day + \"/\" + year;\n  }\n  useEffect(() => {\n    const getCurrentChat = async () => {\n      if (currentChat) {\n        await JSON.parse(localStorage.getItem(\"user\"))._id;\n        // userId\n      }\n    };\n\n    getCurrentChat();\n  }, [currentChat]);\n  const todayDate = getFormattedDate();\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      const today = new Date();\n      const room = currentChat._id;\n      const author = userId;\n      const minutes = today.getMinutes() < 10 ? \"0\" + today.getMinutes() : today.getMinutes();\n      const time = today.getHours() + \":\" + minutes;\n      const content = currentMessage;\n      await socket.emit(\"message-room\", room, content, author, time, todayDate);\n      // setMessageList((list) => [...list, messageData]);\n      setCurrentMessage(\"\");\n    }\n  };\n  useEffect(() => {\n    socket.off(\"room-messages\").on(\"room-messages\", roomMessages => {\n      setMessageList(list => [...list, roomMessages]);\n      // setMessageList(roomMessages);\n    });\n  }, [socket]);\n  console.log(messageList);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-container\",\n        children: [user && messages.map((_ref2, idx) => {\n          let {\n            _id: date,\n            messagesByDate\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"alert alert-info text-center message-date-indicator\",\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this), messagesByDate === null || messagesByDate === void 0 ? void 0 : messagesByDate.map((_ref3, msgIdx) => {\n              var _user, _user2;\n              let {\n                content,\n                time,\n                from: sender\n              } = _ref3;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: (sender === null || sender === void 0 ? void 0 : sender.email) == ((_user = user) === null || _user === void 0 ? void 0 : _user.email) ? \"message\" : \"incoming-message\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-inner\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex align-items-center mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: sender.picture,\n                      style: {\n                        width: 35,\n                        height: 35,\n                        objectFit: \"cover\",\n                        borderRadius: \"50%\",\n                        marginRight: 10\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"message-sender\",\n                      children: sender._id == ((_user2 = user) === null || _user2 === void 0 ? void 0 : _user2._id) ? \"You\" : sender.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"message-content\",\n                    children: content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"message-timestamp-left\",\n                    children: time\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 41\n                }, this)\n              }, msgIdx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 37\n              }, this);\n            })]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messageEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setCurrentMessage(e.target.value),\n          onKeyPress: event => {\n            event.key === \"Enter\" && sendMessage();\n          },\n          value: currentMessage,\n          type: \"text\",\n          className: \"txt-input\",\n          placeholder: \"Send a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          type: \"submit\",\n          className: \"btn-submit\",\n          id: \"chat-submit\",\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(ChatContainercopy, \"WcXKauXMB+6RNjZMLOaIlSoWFaw=\");\n_c = ChatContainercopy;\nvar _c;\n$RefreshReg$(_c, \"ChatContainercopy\");","map":{"version":3,"names":["React","useEffect","useState","useRef","io","useAuthContext","ChatContainercopy","userId","username","currentRoom","currentChat","currentMessage","setCurrentMessage","messageList","setMessageList","messageEndRef","socket","connect","scrollToBottom","current","scrollIntoView","behavior","getFormattedDate","date","Date","year","getFullYear","month","getMonth","toString","length","day","getDate","getCurrentChat","JSON","parse","localStorage","getItem","_id","todayDate","sendMessage","today","room","author","minutes","getMinutes","time","getHours","content","emit","off","on","roomMessages","list","console","log","user","messages","map","idx","messagesByDate","msgIdx","from","sender","email","picture","width","height","objectFit","borderRadius","marginRight","name","e","target","value","event","key"],"sources":["/Users/adonaydagosto/Desktop/Chat_react/client/src/components/ChatContainercopy.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n// import ScrollToBottom from \"react-scroll-to-bottom\";\nimport './ChatContainercopy.css'\nimport { io } from \"socket.io-client\";\nimport { useAuthContext } from '../hooks/useAuthContext'\n\n\n// import Chatinput from \"./Chatinput\";\nexport default function ChatContainercopy({ userId, username, currentRoom, currentChat }) {\n    const [currentMessage, setCurrentMessage] = useState(\"\");\n    const [messageList, setMessageList] = useState([]);\n    const messageEndRef = useRef(null);\n    const socket = io.connect(\"http://localhost:3001\");\n\n\n    useEffect(() => {\n        scrollToBottom();\n    }, [messageList]);\n\n    function scrollToBottom() {\n        messageEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    }\n    function getFormattedDate() {\n        const date = new Date();\n        const year = date.getFullYear();\n        let month = (1 + date.getMonth()).toString();\n\n        month = month.length > 1 ? month : \"0\" + month;\n        let day = date.getDate().toString();\n\n        day = day.length > 1 ? day : \"0\" + day;\n\n        return month + \"/\" + day + \"/\" + year;\n    }\n    useEffect(() => {\n        const getCurrentChat = async () => {\n            if (currentChat) {\n                await JSON.parse(\n                    localStorage.getItem(\"user\")\n                )._id;\n                // userId\n            }\n        };\n        getCurrentChat();\n    }, [currentChat]);\n\n    const todayDate = getFormattedDate();\n\n    const sendMessage = async () => {\n        if (currentMessage !== \"\") {\n            const today = new Date();\n            const room = currentChat._id\n            const author = userId\n            const minutes = today.getMinutes() < 10 ? \"0\" + today.getMinutes() : today.getMinutes();\n            const time = today.getHours() + \":\" + minutes;\n            const content = currentMessage\n            await socket.emit(\"message-room\", room, content, author, time, todayDate);\n            // setMessageList((list) => [...list, messageData]);\n            setCurrentMessage(\"\");\n        }\n\n    };\n    useEffect(() => {\n        socket.off(\"room-messages\").on(\"room-messages\", (roomMessages) => {\n            setMessageList((list) => [...list, roomMessages]);\n            // setMessageList(roomMessages);\n        });\n    }, [socket]);\n\n    console.log(messageList)\n\n    return (\n        <>\n            <div className='chat-container'>\n                <div className=\"message-container\">\n                    {/* {messageList.map((messageContent) => {\n                        <div\n                            className=\"message\"\n                            id={username === messageContent.from ? \"you\" : \"other\"} key={messageContent.time}\n                        >\n                            <div>\n                                <div className=\"message-content\">\n                                    <p>{messageContent.content}</p>\n                                </div>\n                                <div className=\"message-meta\">\n                                    <p id=\"time\">{messageContent.time}</p>\n                                    <p id=\"author\">{messageContent.sender}</p>\n                                </div>\n                            </div>\n                        </div>\n                    })} */}\n                    {user &&\n                        messages.map(({ _id: date, messagesByDate }, idx) => (\n                            <div key={idx}>\n                                <p className=\"alert alert-info text-center message-date-indicator\">{date}</p>\n                                {messagesByDate?.map(({ content, time, from: sender }, msgIdx) => (\n                                    <div className={sender?.email == user?.email ? \"message\" : \"incoming-message\"} key={msgIdx}>\n                                        <div className=\"message-inner\">\n                                            <div className=\"d-flex align-items-center mb-3\">\n                                                <img src={sender.picture} style={{ width: 35, height: 35, objectFit: \"cover\", borderRadius: \"50%\", marginRight: 10 }} />\n                                                <p className=\"message-sender\">{sender._id == user?._id ? \"You\" : sender.name}</p>\n                                            </div>\n                                            <p className=\"message-content\">{content}</p>\n                                            <p className=\"message-timestamp-left\">{time}</p>\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        ))}\n                    <div ref={messageEndRef} />\n                </div>\n                <div className=\"chat-input\" >\n                    <input onChange={(e) => setCurrentMessage(e.target.value)} onKeyPress={(event) => {\n                        event.key === \"Enter\" && sendMessage();\n                    }}\n                        value={currentMessage} type=\"text\" className=\"txt-input\" placeholder=\"Send a message...\" />\n                    <button onClick={sendMessage} type=\"submit\" className=\"btn-submit\" id=\"chat-submit\">send</button>\n                </div>\n                {/* <Chatinput /> */}\n            </div>\n        </>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}