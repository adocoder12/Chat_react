{"ast":null,"code":"var _jsxFileName = \"/Users/adonaydagosto/Desktop/Chat_react/client/src/components/ChatContainercopy.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\n// import ScrollToBottom from \"react-scroll-to-bottom\";\nimport './ChatContainercopy.css';\nimport { useAuthContext } from '../hooks/useAuthContext';\n\n// import Chatinput from \"./Chatinput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChatContainercopy(_ref) {\n  _s();\n  let {\n    socket,\n    userId,\n    currentChat\n  } = _ref;\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  const messageEndRef = useRef(null);\n  const {\n    user\n  } = useAuthContext();\n  useEffect(() => {\n    scrollToBottom();\n  }, [messageList]);\n  function scrollToBottom() {\n    var _messageEndRef$curren;\n    (_messageEndRef$curren = messageEndRef.current) === null || _messageEndRef$curren === void 0 ? void 0 : _messageEndRef$curren.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }\n  useEffect(() => {\n    const getCurrentChat = async () => {\n      if (currentChat) {\n        await JSON.parse(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY))._id;\n      }\n    };\n    getCurrentChat();\n  }, [currentChat]);\n  function getFormattedDate() {\n    const date = new Date();\n    const year = date.getFullYear();\n    let month = (1 + date.getMonth()).toString();\n    month = month.length > 1 ? month : \"0\" + month;\n    let day = date.getDate().toString();\n    day = day.length > 1 ? day : \"0\" + day;\n    return month + \"/\" + day + \"/\" + year;\n  }\n  const todayDate = getFormattedDate();\n  useEffect(() => {\n    socket.current.on(\"room-messages\", roomMessages => {\n      setMessageList(roomMessages);\n    });\n  }, []);\n  console.log(messageList);\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      const today = new Date();\n      const room = currentChat._id;\n      const author = user.username;\n      const minutes = today.getMinutes() < 10 ? \"0\" + today.getMinutes() : today.getMinutes();\n      const time = today.getHours() + \":\" + minutes;\n      const content = currentMessage;\n      await socket.current.emit(\"message-room\", room, content, author, time, todayDate);\n      // setMessageList((list) => [...list, messageData]);\n      setCurrentMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [currentChat && /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-container\",\n        children: [user && messageList.map((_ref2, idx) => {\n          let {\n            _id: date,\n            messagesByDate\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: messagesByDate.map((_ref3, msgIdx) => {\n              let {\n                content,\n                time,\n                from: sender\n              } = _ref3;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"message-content\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"message-meta\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      id: \"time\",\n                      children: time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      id: \"author\",\n                      children: sender\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 41\n                }, this)\n              }, msgIdx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 37\n              }, this);\n            })\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messageEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setCurrentMessage(e.target.value),\n          onKeyPress: event => {\n            event.key === \"Enter\" && sendMessage();\n          },\n          value: currentMessage,\n          type: \"text\",\n          className: \"txt-input\",\n          placeholder: \"Send a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          type: \"submit\",\n          className: \"btn-submit\",\n          id: \"chat-submit\",\n          disabled: !user,\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ChatContainercopy, \"+re9Nj4haDKH69yETCLzaOc6Pb8=\", false, function () {\n  return [useAuthContext];\n});\n_c = ChatContainercopy;\nvar _c;\n$RefreshReg$(_c, \"ChatContainercopy\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useAuthContext","ChatContainercopy","socket","userId","currentChat","currentMessage","setCurrentMessage","messageList","setMessageList","messageEndRef","user","scrollToBottom","current","scrollIntoView","behavior","getCurrentChat","JSON","parse","localStorage","getItem","process","env","REACT_APP_LOCALHOST_KEY","_id","getFormattedDate","date","Date","year","getFullYear","month","getMonth","toString","length","day","getDate","todayDate","on","roomMessages","console","log","sendMessage","today","room","author","username","minutes","getMinutes","time","getHours","content","emit","map","idx","messagesByDate","msgIdx","from","sender","e","target","value","event","key"],"sources":["/Users/adonaydagosto/Desktop/Chat_react/client/src/components/ChatContainercopy.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n// import ScrollToBottom from \"react-scroll-to-bottom\";\nimport './ChatContainercopy.css'\nimport { useAuthContext } from '../hooks/useAuthContext'\n\n\n// import Chatinput from \"./Chatinput\";\nexport default function ChatContainercopy({ socket, userId, currentChat }) {\n    const [currentMessage, setCurrentMessage] = useState(\"\");\n    const [messageList, setMessageList] = useState([]);\n    const messageEndRef = useRef(null);\n    const { user } = useAuthContext()\n\n    useEffect(() => {\n        scrollToBottom();\n    }, [messageList]);\n\n    function scrollToBottom() {\n        messageEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    }\n\n    useEffect(() => {\n        const getCurrentChat = async () => {\n            if (currentChat) {\n                await JSON.parse(\n                    localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\n                )._id;\n            }\n        };\n        getCurrentChat();\n    }, [currentChat]);\n\n    function getFormattedDate() {\n        const date = new Date();\n        const year = date.getFullYear();\n        let month = (1 + date.getMonth()).toString();\n\n        month = month.length > 1 ? month : \"0\" + month;\n        let day = date.getDate().toString();\n\n        day = day.length > 1 ? day : \"0\" + day;\n\n        return month + \"/\" + day + \"/\" + year;\n    }\n\n    const todayDate = getFormattedDate();\n\n    useEffect(() => {\n        socket.current.on(\"room-messages\", (roomMessages) => {\n            setMessageList(roomMessages);\n        });\n    }, []);\n    console.log(messageList)\n\n    const sendMessage = async () => {\n        if (currentMessage !== \"\") {\n            const today = new Date();\n            const room = currentChat._id\n            const author = user.username\n            const minutes = today.getMinutes() < 10 ? \"0\" + today.getMinutes() : today.getMinutes();\n            const time = today.getHours() + \":\" + minutes;\n            const content = currentMessage\n            await socket.current.emit(\"message-room\", room, content, author, time, todayDate);\n            // setMessageList((list) => [...list, messageData]);\n            setCurrentMessage(\"\");\n        }\n    }\n    return (\n        <>\n            {currentChat && (\n                <h1></h1>\n            )}\n            <div className='chat-container'>\n                <div className=\"message-container\">\n                    {/* 2 */}\n                    {user &&\n                        messageList.map(({ _id: date, messagesByDate }, idx) => (\n                            <div key={idx}>\n                                {messagesByDate.map(({ content, time, from: sender }, msgIdx) => (\n                                    <div className=\"message\" key={msgIdx}>\n\n                                        <div>\n                                            <div className=\"message-content\">\n                                                <p>{content}</p>\n                                            </div>\n                                            <div className=\"message-meta\">\n                                                <p id=\"time\">{time}</p>\n                                                <p id=\"author\">{sender}</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        ))}\n\n                    {/* 3 */}\n                    {/* {messageList.map((message) => {\n                            return (\n                                <div ref={scrollRef} key={uuidv4()}>\n                                    <div\n                                        className={`message ${message.fromSelf ? \"sended\" : \"recieved\"\n                                            }`}\n                                    >\n                                        <div className=\"message-content\">\n                                            <p>{message.message}</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            );\n                        })} */}\n                    <div ref={messageEndRef} />\n                </div>\n                <div className=\"chat-input\" >\n                    <input onChange={(e) => setCurrentMessage(e.target.value)} onKeyPress={(event) => {\n                        event.key === \"Enter\" && sendMessage();\n                    }}\n                        value={currentMessage} type=\"text\" className=\"txt-input\" placeholder=\"Send a message...\" />\n                    <button onClick={sendMessage} type=\"submit\" className=\"btn-submit\" id=\"chat-submit\" disabled={!user}>send</button>\n                </div>\n                {/* <Chatinput /> */}\n            </div>\n        </>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}